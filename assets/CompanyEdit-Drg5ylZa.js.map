{"version":3,"file":"CompanyEdit-Drg5ylZa.js","sources":["../../src/features/contacts/components/ContactTable.tsx","../../src/features/companies/components/CompanyEdit.tsx"],"sourcesContent":["// material-ui\nimport { Link } from '@mui/material';\n\n// project imports\nimport { Contact } from '@/api/gql/graphql';\nimport DataTable from '@/ui-component/DataTable';\nimport { RouterLink } from '@/ui-component/RouterLink';\nimport SebraDialog from '@/ui-component/SebraDialog';\nimport { useCreateContact, useDeleteContact, useUpdateContact } from '../hooks/useContactsMutations';\nimport ContactForm from './ContactForm';\n\ninterface ContactTableProps {\n  contacts: Contact[];\n  isLoading: boolean;\n  defaultValues?: Partial<Contact>;\n}\n\nconst ContactTable = ({ contacts, isLoading, defaultValues }: ContactTableProps) => {\n  const { mutate: createContact } = useCreateContact();\n  const { mutate: updateContact } = useUpdateContact();\n  const { mutate: deleteContact } = useDeleteContact();\n\n  return (\n    <DataTable\n      data={contacts}\n      getRowId={(row) => `${row.id}`}\n      state={{ isLoading }}\n      columns={[\n        {\n          accessorKey: 'contactName',\n          header: 'Namn',\n          Cell: ({ cell, row }) => (\n            <Link component={RouterLink} to={`/home/contacts/${row.original.id}`}>\n              {cell.getValue<string>()}\n            </Link>\n          )\n        },\n        { accessorKey: 'email', header: 'Email' },\n        { accessorKey: 'jobTitle', header: 'Jobbtitel' },\n        { accessorKey: 'phone', header: 'Telefonnummer' }\n      ]}\n      renderEditRowDialogContent={({ row, table }) => (\n        <SebraDialog\n          table={table}\n          row={row}\n          titles={{ creating: 'Lägg till kontakt', editing: 'Redigera kontakt' }}\n          FormComponent={ContactForm}\n          defaultValues={defaultValues}\n        />\n      )}\n      onCreate={(row) => createContact(row)}\n      onUpdate={(row) => updateContact(row)}\n      onDelete={(row) => deleteContact(row)}\n    />\n  );\n};\n\nexport default ContactTable;\n","import { useMemo } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\n// material-ui\nimport { Box, Typography } from '@mui/material';\n\n// project imports\nimport { Company } from '@/api/gql/graphql';\nimport AssignmentTable from '@/features/assignments/components/AssignmentTable';\nimport { useAssignments } from '@/features/assignments/hooks/useAssignmentsQueries';\nimport ContactTable from '@/features/contacts/components/ContactTable';\nimport { useContacts } from '@/features/contacts/hooks/useContactsQueries';\nimport { headerHeight } from '@/store/constant';\nimport ContentTabs from '@/ui-component/ContentTabs';\nimport FlexGrow from '@/ui-component/extended/FlexGrow';\nimport { FormActionButtons } from '@/ui-component/SebraForm';\nimport { useCreateCompany, useDeleteCompany, useUpdateCompany } from '../hooks/useCompaniesMutations';\nimport { useCompany } from '../hooks/useCompaniesQueries';\nimport CompanyForm from './CompanyForm';\n\n// ==============================|| COMPANY EDIT PAGE ||============================== //\n\nconst CompanyEdit = () => {\n  const { id, workspace } = useParams();\n  const navigate = useNavigate();\n\n  const { data: company, isLoading } = useCompany(id === 'new' ? undefined : id);\n  const { mutate: createCompany } = useCreateCompany();\n  const { mutate: updateCompany } = useUpdateCompany();\n  const { mutate: deleteCompany } = useDeleteCompany();\n\n  const { data: contacts = [], isLoading: contactsIsLoading } = useContacts();\n  const { data: allAssignments = [], isLoading: assignmentsIsLoading } = useAssignments();\n  const assignments = useMemo(\n    () => allAssignments.filter((assignment) => assignment.company?.id === company?.id),\n    [allAssignments, company]\n  );\n\n  const handleSubmit = (data: Company) => {\n    if (company) {\n      updateCompany({ ...data, id: company.id });\n    } else {\n      createCompany(data, {\n        onSuccess: ({ createCompany }) => navigate(`/${workspace}/home/companies/${createCompany?.id || ''}`)\n      });\n    }\n  };\n\n  if (isLoading) return;\n\n  return (\n    <>\n      <CompanyForm\n        formProps={{ values: company }}\n        onSubmit={handleSubmit}\n        renderTopContent={() => (\n          <Box sx={{ position: 'relative', mt: 1, mb: 3 }}>\n            <Typography variant=\"h4\" color=\"primary\">\n              {company ? 'Redigera bolag' : 'Lägg till bolag'}\n            </Typography>\n\n            <FormActionButtons\n              sx={{ position: 'absolute', top: 0, right: 0 }}\n              onDelete={company ? () => deleteCompany(company, { onSuccess: () => navigate('..') }) : undefined}\n              onCancel={() => navigate(-1)}\n            />\n          </Box>\n        )}\n        renderBottomContent={() =>\n          company && (\n            <FlexGrow sx={{ mt: 1, minHeight: `calc(100vh - ${headerHeight}px - 1rem)` }}>\n              <ContentTabs\n                tabs={[\n                  {\n                    id: 'contacts',\n                    label: 'Kontakter',\n                    content: (\n                      <ContactTable\n                        contacts={contacts.filter((contact) => contact.company?.id === company.id)}\n                        isLoading={contactsIsLoading}\n                        defaultValues={{ company }}\n                      />\n                    )\n                  },\n                  {\n                    id: 'assignments',\n                    label: 'Uppdrag',\n                    content: (\n                      <AssignmentTable\n                        assignments={assignments}\n                        isLoading={assignmentsIsLoading}\n                        defaultValues={{ company }}\n                      />\n                    )\n                  }\n                ]}\n              />\n            </FlexGrow>\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default CompanyEdit;\n"],"names":["ContactTable","contacts","isLoading","defaultValues","createContact","useCreateContact","updateContact","useUpdateContact","deleteContact","useDeleteContact","jsx","DataTable","row","cell","Link","RouterLink","table","SebraDialog","ContactForm","CompanyEdit","id","workspace","useParams","navigate","useNavigate","company","useCompany","createCompany","useCreateCompany","updateCompany","useUpdateCompany","deleteCompany","useDeleteCompany","contactsIsLoading","useContacts","allAssignments","assignmentsIsLoading","useAssignments","assignments","useMemo","assignment","_a","handleSubmit","data","Fragment","CompanyForm","jsxs","Box","Typography","FormActionButtons","FlexGrow","headerHeight","ContentTabs","contact","AssignmentTable"],"mappings":"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"}