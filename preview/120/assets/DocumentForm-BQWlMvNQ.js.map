{"version":3,"file":"DocumentForm-BQWlMvNQ.js","sources":["../../node_modules/.pnpm/@mui+icons-material@5.15.17_@mui+material@5.15.17_@emotion+react@11.11.4_@types+react@18.3.1__ja4zlrgizp3rymmmuglkdwew7u/node_modules/@mui/icons-material/esm/CloudDownload.js","../../node_modules/.pnpm/@mui+icons-material@5.15.17_@mui+material@5.15.17_@emotion+react@11.11.4_@types+react@18.3.1__ja4zlrgizp3rymmmuglkdwew7u/node_modules/@mui/icons-material/esm/CloudUpload.js","../../src/features/documents/api/documentsGQL.ts","../../src/features/documents/api/documentsLocal.ts","../../src/features/documents/api/documentsREST.ts","../../src/features/documents/hooks/useDocumentsMutations.ts","../../src/features/documents/hooks/useDocumentsQueries.ts","../../src/hooks/useBlobUrl.ts","../../src/ui-component/FileSelecter.tsx","../../src/hooks/useWindowDimension.ts","../../src/ui-component/Preview.tsx","../../src/features/documents/components/DocumentForm.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M17 13l-5 5-5-5h3V9h4v4z\"\n}), 'CloudDownload');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M14 13v4h-4v-4H7l5-5 5 5z\"\n}), 'CloudUpload');","import { graphql } from '@/api/gql';\nimport {\n  CreateDocumentReferenceMutation,\n  DeleteDocumentMutation,\n  DeleteDocumentReferenceMutation,\n  DocumentReference,\n  DocumentReference_Where,\n  GetDocumentQuery,\n  GetDocumentReferencesQuery,\n  GetDocumentsQuery,\n  Media,\n  Media_Where,\n  UpdateDocumentReferenceMutation\n} from '@/api/gql/graphql';\nimport { requestGQL } from '@/hooks/useGraphQL';\nimport { pick } from '@/utils';\n\nexport const getDocumentsGQL = (where?: Media_Where): Promise<GetDocumentsQuery> =>\n  requestGQL(\n    graphql(`\n      query GetDocuments($where: Media_where) {\n        allMedia(sort: \"id\", where: $where) {\n          docs {\n            id\n            filename\n            mimeType\n            thumbnailURL\n            alt\n            url\n            createdAt\n            updatedAt\n          }\n        }\n      }\n    `)\n  )({ where });\n\nexport const getDocumentGQL = (data: Pick<Media, 'id'>): Promise<GetDocumentQuery> =>\n  requestGQL(\n    graphql(`\n      query GetDocument($id: String!) {\n        Media(id: $id) {\n          id\n          filename\n          mimeType\n          thumbnailURL\n          alt\n          url\n          createdAt\n          updatedAt\n        }\n      }\n    `)\n  )({ id: data.id });\n\nexport const deleteDocumentGQL = (data: Pick<Media, 'id'>): Promise<DeleteDocumentMutation> =>\n  requestGQL(\n    graphql(`\n      mutation DeleteDocument($id: String!) {\n        deleteMedia(id: $id) {\n          id\n        }\n      }\n    `)\n  )({ id: data.id });\n\nexport const getDocumentReferencesGQL = (where?: DocumentReference_Where): Promise<GetDocumentReferencesQuery> =>\n  requestGQL(\n    graphql(`\n      query GetDocumentReferences($where: DocumentReference_where) {\n        DocumentReferences(sort: \"id\", where: $where) {\n          docs {\n            id\n            entityId\n            entityType\n            createdAt\n            updatedAt\n\n            document {\n              id\n              alt\n              filename\n              mimeType\n              thumbnailURL\n              url\n            }\n          }\n        }\n      }\n    `)\n  )({ where });\n\nexport const createDocumentReferenceGQL = (\n  data: Omit<DocumentReference, 'id'>\n): Promise<CreateDocumentReferenceMutation> =>\n  requestGQL(\n    graphql(`\n      mutation CreateDocumentReference($data: mutationDocumentReferenceInput!) {\n        createDocumentReference(data: $data) {\n          id\n        }\n      }\n    `)\n  )({\n    data: {\n      ...pick(data, ['entityId', 'entityType']),\n      document: data.document.id\n    }\n  });\n\nexport const updateDocumentReferenceGQL = (data: DocumentReference): Promise<UpdateDocumentReferenceMutation> =>\n  requestGQL(\n    graphql(`\n      mutation UpdateDocumentReference($id: String!, $data: mutationDocumentReferenceUpdateInput!) {\n        updateDocumentReference(id: $id, data: $data) {\n          id\n        }\n      }\n    `)\n  )({\n    id: data.id,\n    data: {\n      ...pick(data, ['entityId', 'entityType']),\n      document: data.document.id\n    }\n  });\n\nexport const deleteDocumentReferenceGQL = (data: DocumentReference): Promise<DeleteDocumentReferenceMutation> =>\n  requestGQL(\n    graphql(`\n      mutation DeleteDocumentReference($id: String!) {\n        deleteDocumentReference(id: $id) {\n          id\n        }\n      }\n    `)\n  )({ id: data.id });\n","import { v4 as uuidv4 } from 'uuid';\n\nimport { deleteQuery, insertQuery, selectAllQuery } from '@/api/DummyDB';\nimport {\n  CreateDocumentReferenceMutation,\n  DeleteDocumentReferenceMutation,\n  DocumentReference,\n  DocumentReference_Where,\n  GetDocumentReferencesQuery,\n  Media,\n  UpdateDocumentReferenceMutation,\n  Workspace\n} from '@/api/gql/graphql';\nimport { AssertKeys, convertToSQLWhereClause, getAllFilesFromIndexedDB, pick, validateRequiredFields } from '@/utils';\n\ntype LocalDocumentReference = {\n  id: string;\n  document: Media;\n  entityType: string;\n  entityId: string;\n  workspace?: Workspace;\n  createdAt?: string;\n  updatedAt?: string;\n};\n\nexport const verify: AssertKeys<LocalDocumentReference, Omit<DocumentReference, '__typename'>> = true;\n\ntype FlatDocumentReference = Omit<LocalDocumentReference, 'document' | 'workspace'> & { document: string };\n\nexport const getDocumentReferencesLocal = async (\n  where?: DocumentReference_Where\n): Promise<GetDocumentReferencesQuery> => {\n  const refs = await selectAllQuery<FlatDocumentReference>('document_references', convertToSQLWhereClause(where));\n  const { allMedia } = await getAllFilesFromIndexedDB({ id: { in: refs.map((doc) => doc.document) } });\n  const docs = refs.map((ref) => ({ ...ref, document: allMedia!.docs!.find((doc) => doc!.id === ref.document)! }));\n  return { DocumentReferences: { docs } };\n};\n\nexport const createDocumentReferenceLocal = async (\n  data: Omit<DocumentReference, 'id'>\n): Promise<CreateDocumentReferenceMutation> => {\n  validateRequiredFields(data, ['document', 'entityType', 'entityId']);\n  const params = pick({ ...data, id: uuidv4(), document: data.document.id }, [\n    'id',\n    'document',\n    'entityType',\n    'entityId'\n  ]);\n  return { createDocumentReference: await insertQuery<FlatDocumentReference>('document_references', params) };\n};\n\nexport const updateDocumentReferenceLocal = async ({\n  id,\n  ...data\n}: DocumentReference): Promise<UpdateDocumentReferenceMutation> => {\n  await deleteDocumentReferenceLocal({ id });\n  const res = await createDocumentReferenceLocal(data);\n  return { updateDocumentReference: res.createDocumentReference };\n};\n\nexport const deleteDocumentReferenceLocal = async ({\n  id\n}: Pick<DocumentReference, 'id'>): Promise<DeleteDocumentReferenceMutation> => {\n  return { deleteDocumentReference: await deleteQuery<FlatDocumentReference>('document_references', { id }) };\n};\n","import { Media } from '@/api/gql/graphql';\nimport { API_URL } from '@/config';\nimport { loadToken } from '@/utils/token';\n\nexport const createDocumentRest = async (data: Media & { upload?: File }): Promise<{ doc: Media }> => {\n  const { upload, alt } = data;\n  if (!upload) throw new Error('No file provided');\n\n  const token = loadToken('jwt');\n  const workspace = loadToken('workspace');\n  const formData = new FormData();\n  formData.append('file', upload);\n  formData.append('_payload', JSON.stringify({ alt }));\n\n  const response = await fetch(`${API_URL}/media`, {\n    method: 'POST',\n    body: formData,\n    headers: {\n      ...(token && { Authorization: `JWT ${token}` }),\n      ...(workspace && { 'X-Payload-Workspace': workspace })\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to upload document');\n  }\n\n  return await response.json();\n};\n\nexport const updateDocumentRest = async (data: Media & { upload?: File }): Promise<{ doc: Media }> => {\n  const { upload, alt } = data;\n  const token = loadToken('jwt');\n  const workspace = loadToken('workspace');\n\n  let body;\n  let headers = {};\n  if (upload) {\n    body = new FormData();\n    body.append('file', upload);\n    body.append('_payload', JSON.stringify({ alt }));\n  } else {\n    body = JSON.stringify({ alt });\n    headers = { 'Content-Type': 'application/json' };\n  }\n\n  const response = await fetch(`${API_URL}/media/?where[id][equals]=${data.id}`, {\n    method: 'PATCH',\n    body,\n    headers: {\n      ...(token && { Authorization: `JWT ${token}` }),\n      ...(workspace && { 'X-Payload-Workspace': workspace }),\n      ...headers\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to update document');\n  }\n\n  return await response.json();\n};\n","import { useMutation, useQueryClient } from '@tanstack/react-query';\n\nimport { useSnackbar } from '@/hooks/useSnackbar';\nimport { useIsDemo } from '@/hooks/useIsDemo';\nimport { deleteFileFromIndexedDB, saveFileToIndexedDB } from '@/utils';\nimport {\n  createDocumentReferenceGQL,\n  deleteDocumentGQL,\n  deleteDocumentReferenceGQL,\n  updateDocumentReferenceGQL\n} from '../api/documentsGQL';\nimport {\n  createDocumentReferenceLocal,\n  deleteDocumentReferenceLocal,\n  updateDocumentReferenceLocal\n} from '../api/documentsLocal';\nimport { createDocumentRest, updateDocumentRest } from '../api/documentsREST';\n\nexport const useSaveDocument = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? saveFileToIndexedDB : createDocumentRest,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['documents'] });\n      queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      showSnackbar('Dokumentet sparat!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle sparas.', 'error');\n    }\n  });\n};\n\nexport const useUpdateDocument = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? saveFileToIndexedDB : updateDocumentRest,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['documents'] });\n      queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      showSnackbar('Dokumentet uppdaterat!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle uppdateras.', 'error');\n    }\n  });\n};\n\nexport const useDeleteDocument = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? deleteFileFromIndexedDB : deleteDocumentGQL,\n    onSuccess: () => {\n      setTimeout(() => {\n        queryClient.invalidateQueries({ queryKey: ['documents'] });\n        queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      }, 100);\n      showSnackbar('Dokumentet borttaget!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle tas bort.', 'error');\n    }\n  });\n};\n\nexport const useCreateDocumentReference = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? createDocumentReferenceLocal : createDocumentReferenceGQL,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      showSnackbar('Dokument skapat!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle skapas.', 'error');\n    }\n  });\n};\n\nexport const useUpdateDocumentReference = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? updateDocumentReferenceLocal : updateDocumentReferenceGQL,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      showSnackbar('Dokument uppdaterat!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle uppdateras.', 'error');\n    }\n  });\n};\n\nexport const useDeleteDocumentReference = () => {\n  const isDemo = useIsDemo();\n  const queryClient = useQueryClient();\n  const { showSnackbar } = useSnackbar();\n\n  return useMutation({\n    mutationFn: isDemo ? deleteDocumentReferenceLocal : deleteDocumentReferenceGQL,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['document_references'] });\n      showSnackbar('Dokument borttaget!');\n    },\n    onError: () => {\n      showSnackbar('Ett fel uppstod när dokumentet skulle tas bort.', 'error');\n    }\n  });\n};\n","// third party\nimport { useQuery } from '@tanstack/react-query';\n\n// project imports\nimport { DocumentReference_Where, Media_Where } from '@/api/gql/graphql';\nimport { useIsDemo } from '@/hooks/useIsDemo';\nimport { getAllFilesFromIndexedDB, getFileFromIndexedDB } from '@/utils/idb';\nimport { getDocumentGQL, getDocumentReferencesGQL, getDocumentsGQL } from '../api/documentsGQL';\nimport { getDocumentReferencesLocal } from '../api/documentsLocal';\n\nexport const useDocuments = (where?: Media_Where) => {\n  const isDemo = useIsDemo();\n  const fn = isDemo ? getAllFilesFromIndexedDB : getDocumentsGQL;\n\n  return useQuery({\n    queryKey: ['documents', where],\n    queryFn: () => fn(where),\n    select: (data) => data.allMedia?.docs?.filter((i) => !!i) || [],\n    enabled: where && Object.keys(where).length > 0\n  });\n};\n\nexport const useDocument = (id: string | undefined) => {\n  const isDemo = useIsDemo();\n  const fn = isDemo ? getFileFromIndexedDB : getDocumentGQL;\n\n  return useQuery({\n    queryKey: ['documents', id],\n    queryFn: id ? () => fn({ id }) : undefined,\n    select: (data) => data?.Media,\n    enabled: !!id\n  });\n};\n\nexport const useDocumentReferences = (where?: DocumentReference_Where) => {\n  const isDemo = useIsDemo();\n  const fn = isDemo ? getDocumentReferencesLocal : getDocumentReferencesGQL;\n\n  return useQuery({\n    queryKey: ['document_references', where],\n    queryFn: () => fn(where),\n    select: (data) => data.DocumentReferences?.docs?.filter((i) => !!i) || [],\n    enabled: where && Object.keys(where).length > 0\n  });\n};\n","import { useEffect, useMemo, useState } from 'react';\n\n// project imports\nimport { loadToken } from '@/utils/token';\n\nconst getUrlBlob = async (url: string): Promise<Blob> => {\n  const token = loadToken('jwt');\n  const workspace = loadToken('workspace');\n\n  const response = await fetch(url, {\n    headers: {\n      ...(token && { Authorization: `JWT ${token}` }),\n      ...(workspace && { 'X-Payload-Workspace': workspace })\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to url blob');\n  }\n\n  return await response.blob();\n};\n\nexport const useBlobUrl = (url: string | undefined) => {\n  const [blob, setBlob] = useState<Blob>();\n  const blobUrl = useMemo(() => blob && URL.createObjectURL(blob), [blob]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      if (url) {\n        setIsLoading(true);\n        const blob = await getUrlBlob(url);\n        setBlob(blob);\n        setIsLoading(false);\n      }\n    })();\n  }, [url]);\n\n  return { blob, url: blobUrl, isLoading };\n};\n","import React from 'react';\n\n// material-ui\nimport { Button, ButtonProps } from '@mui/material';\n\n// assets\nimport { CloudUpload } from '@mui/icons-material';\n\ninterface FileSelectorProps extends Omit<ButtonProps, 'onChange'> {\n  onChange?: (data: File) => void;\n}\n\nconst FileSelector = ({ onChange, children, ...rest }: FileSelectorProps) => {\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      onChange?.(file);\n    }\n  };\n\n  return (\n    <Button component=\"label\" role={undefined} variant=\"contained\" tabIndex={-1} startIcon={<CloudUpload />} {...rest}>\n      {children}\n      <input type=\"file\" style={{ display: 'none' }} onChange={handleFileChange} />\n    </Button>\n  );\n};\n\nexport default FileSelector;\n","import { useEffect, useState } from 'react';\n\nfunction useWindowDimension() {\n  const [dimension, setDimension] = useState([window.innerWidth, window.innerHeight]);\n\n  useEffect(() => {\n    const resizeHandler = debounce(() => {\n      setDimension([window.innerWidth, window.innerHeight]);\n    }, 200); // ms\n\n    window.addEventListener('resize', resizeHandler);\n    return () => window.removeEventListener('resize', resizeHandler);\n  }, []);\n\n  return dimension;\n}\n\nconst debounce = <T extends (...args: unknown[]) => unknown>(callback: T, waitFor: number) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>): ReturnType<T> | undefined => {\n    let result: ReturnType<T> | undefined;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      result = callback(...args) as ReturnType<T>;\n    }, waitFor);\n    return result;\n  };\n};\n\nexport default useWindowDimension;\n","import { useRef } from 'react';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project imports\nimport useWindowDimension from '@/hooks/useWindowDimension';\n\nconst SUPPORTED_FILE_TYPES = ['application/pdf', 'application/json', 'image/*', 'text/*', 'video/*', 'audio/*'];\n\ninterface PreviewProps {\n  url?: string;\n  blob?: Blob;\n}\n\nconst Preview = ({ url, blob }: PreviewProps) => {\n  const dimension = useWindowDimension();\n  const iframeRef = useRef<HTMLIFrameElement | null>(null);\n\n  if (!url || !blob || !SUPPORTED_FILE_TYPES.some((type) => blob.type.match(type))) {\n    return;\n  }\n\n  const renderPreview = () => {\n    if (blob.type.startsWith('image/')) {\n      return <img src={url} alt=\"Preview\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />;\n    }\n\n    return (\n      <iframe\n        key={`${dimension}`}\n        ref={iframeRef}\n        src={url}\n        title=\"Preview\"\n        style={{ width: '100%', height: '100%', border: 'none' }}\n      />\n    );\n  };\n\n  return (\n    <Box sx={{ mx: -1, overflow: 'hidden' }}>\n      <Box sx={{ width: '100%', height: '50vh', px: 1 }}>{renderPreview()}</Box>\n    </Box>\n  );\n};\n\nexport default Preview;\n","import { useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\n// material-ui\nimport { Autocomplete, Button, Grid, Stack, TextField } from '@mui/material';\n\n// third party\nimport { Controller, useForm } from 'react-hook-form';\n\n// project imports\nimport { Media } from '@/api/gql/graphql';\nimport { useBlobUrl } from '@/hooks/useBlobUrl';\nimport FileSelector from '@/ui-component/FileSelecter';\nimport Preview from '@/ui-component/Preview';\nimport SebraForm, { FormProps } from '@/ui-component/SebraForm';\nimport { useDocuments } from '../hooks/useDocumentsQueries';\n\n// assets\nimport { CloudDownload } from '@mui/icons-material';\n\n// ==============================|| DOCUMENT FORM ||============================== //\n\nconst DocumentForm = ({ formProps, ...rest }: FormProps<Media & { upload?: File }>) => {\n  const location = useLocation();\n  const { workspace } = useParams();\n  const enableExistingDocuments = !location.pathname.startsWith(`/${workspace}/documents`);\n\n  const { data: documents = [] } = useDocuments();\n\n  const { control, handleSubmit, watch, setValue } = useForm<Media & { upload?: File }>(formProps);\n  const fields = watch();\n  const media = useBlobUrl(fields.url || '');\n\n  const handleFileChange = (data: File) => {\n    setValue('upload', data);\n    setValue('alt', data.name);\n  };\n\n  useEffect(() => {\n    if (fields.id) {\n      const document = documents.find((doc) => doc.id === fields.id);\n      if (document) {\n        setValue('upload', undefined);\n        setValue('alt', document.alt);\n      }\n    } else {\n      setValue('upload', undefined);\n      setValue('alt', '');\n    }\n  }, [fields.id, setValue, documents]);\n\n  return (\n    <SebraForm {...rest} handleSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Controller\n                control={control}\n                name=\"alt\"\n                rules={{ required: true }}\n                defaultValue=\"\"\n                render={({ field, fieldState }) => (\n                  <TextField\n                    fullWidth\n                    label=\"Dokumentnamn\"\n                    type=\"text\"\n                    margin=\"none\"\n                    {...field}\n                    error={!!fieldState.error}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Stack spacing={2} direction=\"row\">\n                {!fields.createdAt && (\n                  <FileSelector onChange={handleFileChange} disabled={!!fields.id}>\n                    Välj dokument\n                  </FileSelector>\n                )}\n                <Button\n                  startIcon={<CloudDownload />}\n                  variant=\"contained\"\n                  href={media.url || '#'}\n                  download={fields.alt}\n                  disabled={!fields.url}\n                >\n                  Ladda ner\n                </Button>\n              </Stack>\n            </Grid>\n            <Grid item xs={12}>\n              {!media.blob && enableExistingDocuments && (\n                <Controller\n                  name=\"id\"\n                  control={control}\n                  render={({ field }) => (\n                    <Autocomplete\n                      options={documents}\n                      getOptionKey={(option) => option.id}\n                      getOptionLabel={(option) => option.alt || ''}\n                      value={documents.find((document) => document.id === field.value) || null}\n                      onChange={(_, value) => field.onChange(value ? value.id : undefined)}\n                      renderInput={(params) => (\n                        <TextField {...params} label=\"Välj existerande dokument\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                  )}\n                />\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Preview url={media.url} blob={media.blob} />\n        </Grid>\n      </Grid>\n    </SebraForm>\n  );\n};\n\nexport default DocumentForm;\n"],"names":["CloudDownload","createSvgIcon","_jsx","CloudUpload","getDocumentsGQL","where","requestGQL","graphql","getDocumentGQL","data","deleteDocumentGQL","getDocumentReferencesGQL","createDocumentReferenceGQL","pick","updateDocumentReferenceGQL","deleteDocumentReferenceGQL","getDocumentReferencesLocal","refs","selectAllQuery","convertToSQLWhereClause","allMedia","getAllFilesFromIndexedDB","doc","ref","createDocumentReferenceLocal","validateRequiredFields","params","uuidv4","insertQuery","updateDocumentReferenceLocal","id","deleteDocumentReferenceLocal","deleteQuery","createDocumentRest","upload","alt","token","loadToken","workspace","formData","response","API_URL","updateDocumentRest","body","headers","useSaveDocument","isDemo","useIsDemo","queryClient","useQueryClient","showSnackbar","useSnackbar","useMutation","saveFileToIndexedDB","useUpdateDocument","useDeleteDocument","deleteFileFromIndexedDB","useCreateDocumentReference","useUpdateDocumentReference","useDeleteDocumentReference","useDocuments","fn","useQuery","_b","_a","i","useDocument","getFileFromIndexedDB","useDocumentReferences","getUrlBlob","url","useBlobUrl","blob","setBlob","useState","blobUrl","useMemo","isLoading","setIsLoading","useEffect","FileSelector","onChange","children","rest","handleFileChange","event","file","jsxs","Button","jsx","useWindowDimension","dimension","setDimension","resizeHandler","debounce","callback","waitFor","timeout","args","result","SUPPORTED_FILE_TYPES","Preview","iframeRef","useRef","type","renderPreview","Box","DocumentForm","formProps","location","useLocation","useParams","enableExistingDocuments","documents","control","handleSubmit","watch","setValue","useForm","fields","media","document","SebraForm","Grid","Controller","field","fieldState","TextField","Stack","Autocomplete","option","_","value"],"mappings":"4pBAIA,MAAAA,EAAeC,EAA4BC,EAAI,IAAC,OAAQ,CACtD,EAAG,iLACL,CAAC,EAAG,eAAe,ECFnBC,EAAeF,EAA4BC,EAAI,IAAC,OAAQ,CACtD,EAAG,kLACL,CAAC,EAAG,aAAa,ECWJE,GAAmBC,GAC9BC,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeP,CACH,EAAE,CAAE,MAAAF,EAAO,EAEAG,GAAkBC,GAC7BH,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaP,CACH,EAAE,CAAE,GAAIE,EAAK,EAAI,CAAA,EAENC,GAAqBD,GAChCH,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMP,CACH,EAAE,CAAE,GAAIE,EAAK,EAAI,CAAA,EAENE,GAA4BN,GACvCC,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBP,CACH,EAAE,CAAE,MAAAF,EAAO,EAEAO,GACXH,GAEAH,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMP,CACH,EAAE,CACA,KAAM,CACJ,GAAGM,EAAKJ,EAAM,CAAC,WAAY,YAAY,CAAC,EACxC,SAAUA,EAAK,SAAS,EAC1B,CACF,CAAC,EAEUK,GAA8BL,GACzCH,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMP,CACH,EAAE,CACA,GAAIE,EAAK,GACT,KAAM,CACJ,GAAGI,EAAKJ,EAAM,CAAC,WAAY,YAAY,CAAC,EACxC,SAAUA,EAAK,SAAS,EAC1B,CACF,CAAC,EAEUM,GAA8BN,GACzCH,EACEC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMP,CACH,EAAE,CAAE,GAAIE,EAAK,GAAI,EC3GNO,GAA6B,MACxCX,GACwC,CACxC,MAAMY,EAAO,MAAMC,EAAsC,sBAAuBC,EAAwBd,CAAK,CAAC,EACxG,CAAE,SAAAe,CAAS,EAAI,MAAMC,EAAyB,CAAE,GAAI,CAAE,GAAIJ,EAAK,IAAKK,GAAQA,EAAI,QAAQ,CAAA,CAAK,CAAA,EAEnG,MAAO,CAAE,mBAAoB,CAAE,KADlBL,EAAK,IAAKM,IAAS,CAAE,GAAGA,EAAK,SAAUH,EAAU,KAAM,KAAME,GAAQA,EAAK,KAAOC,EAAI,QAAQ,CAAK,EAAA,CAChF,EACjC,EAEaC,EAA+B,MAC1Cf,GAC6C,CAC7CgB,EAAuBhB,EAAM,CAAC,WAAY,aAAc,UAAU,CAAC,EACnE,MAAMiB,EAASb,EAAK,CAAE,GAAGJ,EAAM,GAAIkB,EAAO,EAAG,SAAUlB,EAAK,SAAS,EAAA,EAAM,CACzE,KACA,WACA,aACA,UAAA,CACD,EACD,MAAO,CAAE,wBAAyB,MAAMmB,EAAmC,sBAAuBF,CAAM,CAAE,CAC5G,EAEaG,GAA+B,MAAO,CACjD,GAAAC,EACA,GAAGrB,CACL,KACQ,MAAAsB,EAA6B,CAAE,GAAAD,CAAA,CAAI,EAElC,CAAE,yBADG,MAAMN,EAA6Bf,CAAI,GACb,0BAG3BsB,EAA+B,MAAO,CACjD,GAAAD,CACF,KACS,CAAE,wBAAyB,MAAME,EAAmC,sBAAuB,CAAE,GAAAF,CAAI,CAAA,IC3D7FG,GAAqB,MAAOxB,GAA6D,CAC9F,KAAA,CAAE,OAAAyB,EAAQ,IAAAC,CAAQ,EAAA1B,EACxB,GAAI,CAACyB,EAAc,MAAA,IAAI,MAAM,kBAAkB,EAEzC,MAAAE,EAAQC,EAAU,KAAK,EACvBC,EAAYD,EAAU,WAAW,EACjCE,EAAW,IAAI,SACZA,EAAA,OAAO,OAAQL,CAAM,EAC9BK,EAAS,OAAO,WAAY,KAAK,UAAU,CAAE,IAAAJ,CAAK,CAAA,CAAC,EAEnD,MAAMK,EAAW,MAAM,MAAM,GAAGC,CAAO,SAAU,CAC/C,OAAQ,OACR,KAAMF,EACN,QAAS,CACP,GAAIH,GAAS,CAAE,cAAe,OAAOA,CAAK,EAAG,EAC7C,GAAIE,GAAa,CAAE,sBAAuBA,CAAU,CACtD,CAAA,CACD,EAEG,GAAA,CAACE,EAAS,GACN,MAAA,IAAI,MAAM,2BAA2B,EAGtC,OAAA,MAAMA,EAAS,MACxB,EAEaE,GAAqB,MAAOjC,GAA6D,CAC9F,KAAA,CAAE,OAAAyB,EAAQ,IAAAC,CAAQ,EAAA1B,EAClB2B,EAAQC,EAAU,KAAK,EACvBC,EAAYD,EAAU,WAAW,EAEnC,IAAAM,EACAC,EAAU,CAAA,EACVV,GACFS,EAAO,IAAI,SACNA,EAAA,OAAO,OAAQT,CAAM,EAC1BS,EAAK,OAAO,WAAY,KAAK,UAAU,CAAE,IAAAR,CAAK,CAAA,CAAC,IAE/CQ,EAAO,KAAK,UAAU,CAAE,IAAAR,CAAK,CAAA,EACnBS,EAAA,CAAE,eAAgB,qBAGxB,MAAAJ,EAAW,MAAM,MAAM,GAAGC,CAAO,6BAA6BhC,EAAK,EAAE,GAAI,CAC7E,OAAQ,QACR,KAAAkC,EACA,QAAS,CACP,GAAIP,GAAS,CAAE,cAAe,OAAOA,CAAK,EAAG,EAC7C,GAAIE,GAAa,CAAE,sBAAuBA,CAAU,EACpD,GAAGM,CACL,CAAA,CACD,EAEG,GAAA,CAACJ,EAAS,GACN,MAAA,IAAI,MAAM,2BAA2B,EAGtC,OAAA,MAAMA,EAAS,MACxB,EC3CaK,GAAkB,IAAM,CACnC,MAAMC,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAASO,EAAsBpB,GAC3C,UAAW,IAAM,CACfe,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EACzDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,EACnEE,EAAa,oBAAoB,CACnC,EACA,QAAS,IAAM,CACbA,EAAa,gDAAiD,OAAO,CACvE,CAAA,CACD,CACH,EAEaI,GAAoB,IAAM,CACrC,MAAMR,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAASO,EAAsBX,GAC3C,UAAW,IAAM,CACfM,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EACzDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,EACnEE,EAAa,wBAAwB,CACvC,EACA,QAAS,IAAM,CACbA,EAAa,oDAAqD,OAAO,CAC3E,CAAA,CACD,CACH,EAEaK,GAAoB,IAAM,CACrC,MAAMT,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAASU,EAA0B9C,GAC/C,UAAW,IAAM,CACf,WAAW,IAAM,CACfsC,EAAY,kBAAkB,CAAE,SAAU,CAAC,WAAW,CAAG,CAAA,EACzDA,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,GAClE,GAAG,EACNE,EAAa,uBAAuB,CACtC,EACA,QAAS,IAAM,CACbA,EAAa,kDAAmD,OAAO,CACzE,CAAA,CACD,CACH,EAEaO,GAA6B,IAAM,CAC9C,MAAMX,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAAStB,EAA+BZ,GACpD,UAAW,IAAM,CACfoC,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,EACnEE,EAAa,kBAAkB,CACjC,EACA,QAAS,IAAM,CACbA,EAAa,gDAAiD,OAAO,CACvE,CAAA,CACD,CACH,EAEaQ,GAA6B,IAAM,CAC9C,MAAMZ,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAASjB,GAA+Bf,GACpD,UAAW,IAAM,CACfkC,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,EACnEE,EAAa,sBAAsB,CACrC,EACA,QAAS,IAAM,CACbA,EAAa,oDAAqD,OAAO,CAC3E,CAAA,CACD,CACH,EAEaS,GAA6B,IAAM,CAC9C,MAAMb,EAASC,IACTC,EAAcC,IACd,CAAE,aAAAC,GAAiBC,IAEzB,OAAOC,EAAY,CACjB,WAAYN,EAASf,EAA+BhB,GACpD,UAAW,IAAM,CACfiC,EAAY,kBAAkB,CAAE,SAAU,CAAC,qBAAqB,CAAG,CAAA,EACnEE,EAAa,qBAAqB,CACpC,EACA,QAAS,IAAM,CACbA,EAAa,kDAAmD,OAAO,CACzE,CAAA,CACD,CACH,ECjHaU,GAAgBvD,GAAwB,CAE7C,MAAAwD,EADSd,IACK1B,EAA2BjB,GAE/C,OAAO0D,EAAS,CACd,SAAU,CAAC,YAAazD,CAAK,EAC7B,QAAS,IAAMwD,EAAGxD,CAAK,EACvB,OAASI,YAAS,QAAAsD,GAAAC,EAAAvD,EAAK,WAAL,YAAAuD,EAAe,OAAf,YAAAD,EAAqB,OAAQE,GAAM,CAAC,CAACA,KAAM,CAAC,GAC9D,QAAS5D,CAAqC,CAC/C,CACH,EAEa6D,GAAepC,GAA2B,CAE/C,MAAA+B,EADSd,IACKoB,EAAuB3D,GAE3C,OAAOsD,EAAS,CACd,SAAU,CAAC,YAAahC,CAAE,EAC1B,QAASA,EAAK,IAAM+B,EAAG,CAAE,GAAA/B,CAAA,CAAI,EAAI,OACjC,OAASrB,GAASA,GAAA,YAAAA,EAAM,MACxB,QAAS,CAAC,CAACqB,CAAA,CACZ,CACH,EAEasC,GAAyB/D,GAAoC,CAElE,MAAAwD,EADSd,IACK/B,GAA6BL,GAEjD,OAAOmD,EAAS,CACd,SAAU,CAAC,sBAAuBzD,CAAK,EACvC,QAAS,IAAMwD,EAAGxD,CAAK,EACvB,OAASI,YAAS,QAAAsD,GAAAC,EAAAvD,EAAK,qBAAL,YAAAuD,EAAyB,OAAzB,YAAAD,EAA+B,OAAQE,GAAM,CAAC,CAACA,KAAM,CAAC,GACxE,QAAS5D,GAAS,OAAO,KAAKA,CAAK,EAAE,OAAS,CAAA,CAC/C,CACH,ECvCMgE,GAAa,MAAOC,GAA+B,CACjD,MAAAlC,EAAQC,EAAU,KAAK,EACvBC,EAAYD,EAAU,WAAW,EAEjCG,EAAW,MAAM,MAAM8B,EAAK,CAChC,QAAS,CACP,GAAIlC,GAAS,CAAE,cAAe,OAAOA,CAAK,EAAG,EAC7C,GAAIE,GAAa,CAAE,sBAAuBA,CAAU,CACtD,CAAA,CACD,EAEG,GAAA,CAACE,EAAS,GACN,MAAA,IAAI,MAAM,oBAAoB,EAG/B,OAAA,MAAMA,EAAS,MACxB,EAEa+B,GAAcD,GAA4B,CACrD,KAAM,CAACE,EAAMC,CAAO,EAAIC,EAAe,SAAA,EACjCC,EAAUC,UAAQ,IAAMJ,GAAQ,IAAI,gBAAgBA,CAAI,EAAG,CAACA,CAAI,CAAC,EACjE,CAACK,EAAWC,CAAY,EAAIJ,WAAS,EAAK,EAEhDK,OAAAA,EAAAA,UAAU,IAAM,EACb,SAAY,CACX,GAAIT,EAAK,CACPQ,EAAa,EAAI,EACXN,MAAAA,EAAO,MAAMH,GAAWC,CAAG,EACjCG,EAAQD,CAAI,EACZM,EAAa,EAAK,CACpB,CAAA,IACC,EACF,CAACR,CAAG,CAAC,EAED,CAAE,KAAAE,EAAM,IAAKG,EAAS,UAAAE,CAAU,CACzC,EC5BMG,GAAe,CAAC,CAAE,SAAAC,EAAU,SAAAC,EAAU,GAAGC,KAA8B,CACrE,MAAAC,EAAoBC,GAA+C,OACvE,MAAMC,GAAOtB,EAAAqB,EAAM,OAAO,QAAb,YAAArB,EAAqB,GAC9BsB,IACFL,GAAA,MAAAA,EAAWK,GACb,EAGF,OACGC,EAAA,KAAAC,EAAA,CAAO,UAAU,QAAQ,KAAM,OAAW,QAAQ,YAAY,SAAU,GAAI,UAAWC,EAAA,IAACtF,EAAY,EAAA,EAAK,GAAGgF,EAC1G,SAAA,CAAAD,EACDO,EAAAA,IAAC,QAAM,CAAA,KAAK,OAAO,MAAO,CAAE,QAAS,MAAA,EAAU,SAAUL,CAAkB,CAAA,CAC7E,CAAA,CAAA,CAEJ,ECxBA,SAASM,IAAqB,CACtB,KAAA,CAACC,EAAWC,CAAY,EAAIlB,EAAA,SAAS,CAAC,OAAO,WAAY,OAAO,WAAW,CAAC,EAElFK,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAc,EAAgBC,GAAS,IAAM,CACnCF,EAAa,CAAC,OAAO,WAAY,OAAO,WAAW,CAAC,GACnD,GAAG,EAEC,cAAA,iBAAiB,SAAUC,CAAa,EACxC,IAAM,OAAO,oBAAoB,SAAUA,CAAa,CACjE,EAAG,CAAE,CAAA,EAEEF,CACT,CAEA,MAAMG,GAAW,CAA4CC,EAAaC,IAAoB,CACxF,IAAAC,EACJ,MAAO,IAAIC,IAAmD,CACxD,IAAAC,EACJ,oBAAaF,CAAO,EACpBA,EAAU,WAAW,IAAM,CAChBE,EAAAJ,EAAS,GAAGG,CAAI,GACxBF,CAAO,EACHG,CAAA,CAEX,ECnBMC,GAAuB,CAAC,kBAAmB,mBAAoB,UAAW,SAAU,UAAW,SAAS,EAOxGC,GAAU,CAAC,CAAE,IAAA/B,EAAK,KAAAE,KAAyB,CAC/C,MAAMmB,EAAYD,KACZY,EAAYC,SAAiC,IAAI,EAEvD,GAAI,CAACjC,GAAO,CAACE,GAAQ,CAAC4B,GAAqB,KAAMI,GAAShC,EAAK,KAAK,MAAMgC,CAAI,CAAC,EAC7E,OAGF,MAAMC,EAAgB,IAChBjC,EAAK,KAAK,WAAW,QAAQ,EACvBiB,EAAAA,IAAA,MAAA,CAAI,IAAKnB,EAAK,IAAI,UAAU,MAAO,CAAE,MAAO,OAAQ,OAAQ,OAAQ,UAAW,OAAW,CAAA,CAAA,EAIlGmB,EAAA,IAAC,SAAA,CAEC,IAAKa,EACL,IAAKhC,EACL,MAAM,UACN,MAAO,CAAE,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,CAAA,EAJlD,GAAGqB,CAAS,EAAA,EAUrB,OAAAF,MAACiB,GAAI,GAAI,CAAE,GAAI,GAAI,SAAU,QAAS,EACpC,SAACjB,EAAA,IAAAiB,EAAA,CAAI,GAAI,CAAE,MAAO,OAAQ,OAAQ,OAAQ,GAAI,CAAE,EAAI,SAAcD,GAAE,CAAA,CACtE,CAAA,CAEJ,ECtBME,GAAe,CAAC,CAAE,UAAAC,EAAW,GAAGzB,KAAiD,CACrF,MAAM0B,EAAWC,IACX,CAAE,UAAAxE,GAAcyE,IAChBC,EAA0B,CAACH,EAAS,SAAS,WAAW,IAAIvE,CAAS,YAAY,EAEjF,CAAE,KAAM2E,EAAY,CAAA,GAAOrD,GAAa,EAExC,CAAE,QAAAsD,EAAS,aAAAC,EAAc,MAAAC,EAAO,SAAAC,GAAaC,EAAmCV,CAAS,EACzFW,EAASH,IACTI,EAAQjD,GAAWgD,EAAO,KAAO,EAAE,EAEnCnC,EAAoB3E,GAAe,CACvC4G,EAAS,SAAU5G,CAAI,EACd4G,EAAA,MAAO5G,EAAK,IAAI,CAAA,EAG3BsE,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIwC,EAAO,GAAI,CACP,MAAAE,EAAWR,EAAU,KAAM3F,GAAQA,EAAI,KAAOiG,EAAO,EAAE,EACzDE,IACFJ,EAAS,SAAU,MAAS,EACnBA,EAAA,MAAOI,EAAS,GAAG,EAC9B,MAEAJ,EAAS,SAAU,MAAS,EAC5BA,EAAS,MAAO,EAAE,GAEnB,CAACE,EAAO,GAAIF,EAAUJ,CAAS,CAAC,EAGjCxB,EAAA,IAACiC,EAAW,CAAA,GAAGvC,EAAM,aAAAgC,EACnB,gBAACQ,EAAK,CAAA,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAlC,EAAA,IAACkC,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApC,EAAAA,KAACoC,EAAK,CAAA,UAAS,GAAC,QAAS,EACvB,SAAA,CAAAlC,EAAA,IAACkC,EAAK,CAAA,KAAI,GAAC,GAAI,GACb,SAAAlC,EAAA,IAACmC,EAAA,CACC,QAAAV,EACA,KAAK,MACL,MAAO,CAAE,SAAU,EAAK,EACxB,aAAa,GACb,OAAQ,CAAC,CAAE,MAAAW,EAAO,WAAAC,CAChB,IAAArC,EAAA,IAACsC,EAAA,CACC,UAAS,GACT,MAAM,eACN,KAAK,OACL,OAAO,OACN,GAAGF,EACJ,MAAO,CAAC,CAACC,EAAW,KAAA,CACtB,CAAA,CAAA,EAGN,EACArC,EAAA,IAACkC,EAAK,CAAA,KAAI,GAAC,GAAI,GACb,SAAApC,EAAAA,KAACyC,EAAM,CAAA,QAAS,EAAG,UAAU,MAC1B,SAAA,CAAC,CAAAT,EAAO,WACP9B,EAAA,IAACT,GAAa,CAAA,SAAUI,EAAkB,SAAU,CAAC,CAACmC,EAAO,GAAI,SAEjE,eAAA,CAAA,EAEF9B,EAAA,IAACD,EAAA,CACC,gBAAYxF,EAAc,EAAA,EAC1B,QAAQ,YACR,KAAMwH,EAAM,KAAO,IACnB,SAAUD,EAAO,IACjB,SAAU,CAACA,EAAO,IACnB,SAAA,WAAA,CAED,CAAA,CAAA,CACF,CACF,CAAA,EACA9B,EAAAA,IAACkC,GAAK,KAAI,GAAC,GAAI,GACZ,SAAA,CAACH,EAAM,MAAQR,GACdvB,EAAA,IAACmC,EAAA,CACC,KAAK,KACL,QAAAV,EACA,OAAQ,CAAC,CAAE,MAAAW,CAAA,IACTpC,EAAA,IAACwC,EAAA,CACC,QAAShB,EACT,aAAeiB,GAAWA,EAAO,GACjC,eAAiBA,GAAWA,EAAO,KAAO,GAC1C,MAAOjB,EAAU,KAAMQ,GAAaA,EAAS,KAAOI,EAAM,KAAK,GAAK,KACpE,SAAU,CAACM,EAAGC,IAAUP,EAAM,SAASO,EAAQA,EAAM,GAAK,MAAS,EACnE,YAAc1G,GACZ+D,MAACsC,EAAW,CAAA,GAAGrG,EAAQ,MAAM,4BAA4B,QAAQ,WAAW,UAAS,EAAC,CAAA,CAAA,CAE1F,CAAA,CAAA,EAIR,CAAA,CAAA,CACF,CACF,CAAA,QACCiG,EAAK,CAAA,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAClC,EAAA,IAAAY,GAAA,CAAQ,IAAKmB,EAAM,IAAK,KAAMA,EAAM,IAAM,CAAA,EAC7C,CAAA,CACF,CAAA,CACF,CAAA,CAEJ","x_google_ignoreList":[0,1]}