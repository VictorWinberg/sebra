import{n as v,v as q,o as D,p as k,q as F,s as p,t as x,j as n,G as i,w as y,k as b,r as R,C as f,d as K,e as L,L as Q,A as M,x as N}from"./index-B5Wn1pV6.js";import{D as O}from"./DataTable-CHC-0lOI.js";import{S as A}from"./SebraDialog-DMHdke9R.js";import{f as w,t as V}from"./date-CTTbm3Z8.js";import{p as m,t as C,u as h,a as g,S as _,D as G,A as W,b as z}from"./useSnackbar-DKcC1YFu.js";import{u as P,C as j}from"./index.esm-DVlgypon.js";import{u as U}from"./useContactsQueries-D3qhIykf.js";const $=async()=>{const a=(await p("SELECT * FROM interactions")).map(e=>({...e,contacts:[]})),o=C(a,"id"),c=await p("SELECT * FROM contacts"),u=C(c,"id");return(await p("SELECT * FROM interaction_contacts")).forEach(e=>{const r=o.get(e.interactionId),s=u.get(e.contactId);!r||!s||r.contacts.push(s)}),Array.from(o.values())},B=async t=>{const a=await v("interactions",m({...t,interactionId:q()},["id","interactionType","interactionDate","notes"]));await E({id:a.id,contacts:t.contacts})},H=async t=>{await D("interactions",m(t,["interactionType","interactionDate","notes"]),m(t,["id"])),await X(t)},J=async t=>{await S(t),await k("interactions",m(t,["id"]))},E=async t=>{await F("interaction_contacts",t.contacts.map(({id:a})=>({interactionId:t.id,contactId:a})))},X=async t=>{await S(t),await E(t)},S=async({id:t})=>{await k("interaction_contacts",{interactionId:t})},Y=()=>{const t=x(),{showSnackbar:a}=h();return g({mutationFn:B,onSuccess:()=>{t.invalidateQueries({queryKey:["interactions"]}),a("Interaktion sparat!")},onError:()=>{a("Ett fel uppstod när interaktionen skulle sparas.","error")}})},Z=()=>{const t=x(),{showSnackbar:a}=h();return g({mutationFn:H,onSuccess:()=>{t.invalidateQueries({queryKey:["interactions"]}),a("Interaktion uppdaterat!")},onError:()=>{a("Ett fel uppstod när interaktionen skulle uppdateras.","error")}})},tt=()=>{const t=x(),{showSnackbar:a}=h();return g({mutationFn:J,onSuccess:()=>{t.invalidateQueries({queryKey:["interactions"]}),a("Interaktion borttaget!")},onError:()=>{a("Ett fel uppstod när interaktionen skulle tas bort.","error")}})},et=({formProps:t,...a})=>{const{data:o=[]}=U(),{control:c,handleSubmit:u,register:l,formState:{errors:e}}=P(t);return n.jsx(_,{...a,handleSubmit:u,children:n.jsxs(i,{container:!0,spacing:2,children:[n.jsx(i,{item:!0,xs:12,sm:6,children:n.jsxs(i,{container:!0,spacing:2,children:[n.jsx(i,{item:!0,xs:12,children:n.jsx(y,{fullWidth:!0,label:"Typ av interaktion",type:"text",margin:"none",...l("interactionType",{required:!0}),error:!!e.interactionType})}),n.jsx(i,{item:!0,xs:12,children:n.jsx(y,{multiline:!0,fullWidth:!0,minRows:4,label:"Noteringar",type:"text",margin:"none",...l("notes"),error:!!e.notes})})]})}),n.jsx(i,{item:!0,xs:12,sm:6,children:n.jsxs(i,{container:!0,spacing:2,children:[n.jsx(i,{item:!0,xs:12,children:n.jsx(j,{control:c,name:"interactionDate",rules:{required:!0},render:({field:r})=>n.jsx(G,{label:"Interaktionsdatum",value:b(r.value),inputRef:r.ref,onChange:s=>r.onChange(w(s))})})}),n.jsx(i,{item:!0,xs:12,children:n.jsx(j,{name:"contacts",control:c,render:({field:r})=>n.jsx(W,{multiple:!0,disableCloseOnSelect:!0,id:"multiple-contacts",options:o,getOptionKey:s=>s.id,getOptionLabel:s=>s.contactName,isOptionEqualToValue:(s,d)=>s.id===d.id,value:r.value||[],onChange:(s,d)=>r.onChange(d),renderInput:s=>n.jsx(y,{...s,label:"Kontakter",variant:"outlined",fullWidth:!0,error:!!e.contacts}),renderTags:(s,d)=>s.map((I,T)=>R.createElement(f,{...d({index:T}),key:I.id,label:I.contactName}))})})})]})})]})})},ut=({interactions:t,isLoading:a,defaultValues:o})=>{const{mutate:c}=Y(),{mutate:u}=Z(),{mutate:l}=tt();return n.jsx(O,{data:t,getRowId:e=>e.id,state:{isLoading:a},columns:[{accessorKey:"interactionType",header:"Typ",filterVariant:"multi-select"},{accessorKey:"contacts",header:"Kontakter",minSize:150,enableEditing:!1,Cell:({cell:e})=>n.jsx(K,{disablePadding:!0,children:e.getValue().map(r=>n.jsx(L,{sx:{py:.25},disableGutters:!0,children:n.jsx(f,{component:Q,variant:"outlined",avatar:n.jsx(M,{...N(r.contactName)}),label:r.contactName,to:`/home/contacts/${r.id}`,clickable:!0,size:"small"})},r.id))})},{accessorKey:"notes",header:"Noteringar"},{accessorFn:e=>b(e.interactionDate),header:"Interaktionsdatum",filterVariant:"date-range",enableEditing:!1,Cell:({cell:e})=>w(V(e.getValue()))}],renderEditRowDialogContent:({row:e,table:r})=>n.jsx(A,{table:r,row:e,titles:{creating:"Ny interaktion",editing:"Redigera interaktion"},FormComponent:et,defaultValues:o}),onCreate:e=>c(e),onUpdate:e=>u(e),onDelete:e=>l(e)})},lt=()=>z({queryKey:["interactions"],queryFn:()=>$()});export{ut as I,lt as u};
